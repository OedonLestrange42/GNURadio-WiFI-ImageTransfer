options:
  parameters:
    author: oedon
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: IRS_AP
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: chan_est
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '["LS", "LMS", "Linear Comb", "STA"]'
    num_opts: '0'
    option0: '0'
    option1: '1'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[0, 1, 2, 3]'
    orient: Qt.QHBoxLayout
    type: int
    value: '0'
    widget: radio_buttons
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 12.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '[''  1 | 2412.0 | 11g'', ''  2 | 2417.0 | 11g'', ''  3 | 2422.0 | 11g'',
      ''  4 | 2427.0 | 11g'', ''  5 | 2432.0 | 11g'', ''  6 | 2437.0 | 11g'', ''  7
      | 2442.0 | 11g'', ''  8 | 2447.0 | 11g'', ''  9 | 2452.0 | 11g'', '' 10 | 2457.0
      | 11g'', '' 11 | 2462.0 | 11g'', '' 12 | 2467.0 | 11g'', '' 13 | 2472.0 | 11g'',
      '' 14 | 2484.0 | 11g'', '' 34 | 5170.0 | 11a'', '' 36 | 5180.0 | 11a'', '' 38
      | 5190.0 | 11a'', '' 40 | 5200.0 | 11a'', '' 42 | 5210.0 | 11a'', '' 44 | 5220.0
      | 11a'', '' 46 | 5230.0 | 11a'', '' 48 | 5240.0 | 11a'', '' 50 | 5250.0 | 11a'',
      '' 52 | 5260.0 | 11a'', '' 54 | 5270.0 | 11a'', '' 56 | 5280.0 | 11a'', '' 58
      | 5290.0 | 11a'', '' 60 | 5300.0 | 11a'', '' 62 | 5310.0 | 11a'', '' 64 | 5320.0
      | 11a'', ''100 | 5500.0 | 11a'', ''102 | 5510.0 | 11a'', ''104 | 5520.0 | 11a'',
      ''106 | 5530.0 | 11a'', ''108 | 5540.0 | 11a'', ''110 | 5550.0 | 11a'', ''112
      | 5560.0 | 11a'', ''114 | 5570.0 | 11a'', ''116 | 5580.0 | 11a'', ''118 | 5590.0
      | 11a'', ''120 | 5600.0 | 11a'', ''122 | 5610.0 | 11a'', ''124 | 5620.0 | 11a'',
      ''126 | 5630.0 | 11a'', ''128 | 5640.0 | 11a'', ''132 | 5660.0 | 11a'', ''134
      | 5670.0 | 11a'', ''136 | 5680.0 | 11a'', ''138 | 5690.0 | 11a'', ''140 | 5700.0
      | 11a'', ''142 | 5710.0 | 11a'', ''144 | 5720.0 | 11a'', ''149 | 5745.0 | 11a
      (SRD)'', ''151 | 5755.0 | 11a (SRD)'', ''153 | 5765.0 | 11a (SRD)'', ''155 |
      5775.0 | 11a (SRD)'', ''157 | 5785.0 | 11a (SRD)'', ''159 | 5795.0 | 11a (SRD)'',
      ''161 | 5805.0 | 11a (SRD)'', ''165 | 5825.0 | 11a (SRD)'', ''172 | 5860.0 |
      11p'', ''174 | 5870.0 | 11p'', ''176 | 5880.0 | 11p'', ''178 | 5890.0 | 11p'',
      ''180 | 5900.0 | 11p'', ''182 | 5910.0 | 11p'', ''184 | 5920.0 | 11p'']'
    num_opts: '0'
    option0: '0'
    option1: '1'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[2412000000.0, 2417000000.0, 2422000000.0, 2427000000.0, 2432000000.0,
      2437000000.0, 2442000000.0, 2447000000.0, 2452000000.0, 2457000000.0, 2462000000.0,
      2467000000.0, 2472000000.0, 2484000000.0, 5170000000.0, 5180000000.0, 5190000000.0,
      5200000000.0, 5210000000.0, 5220000000.0, 5230000000.0, 5240000000.0, 5250000000.0,
      5260000000.0, 5270000000.0, 5280000000.0, 5290000000.0, 5300000000.0, 5310000000.0,
      5320000000.0, 5500000000.0, 5510000000.0, 5520000000.0, 5530000000.0, 5540000000.0,
      5550000000.0, 5560000000.0, 5570000000.0, 5580000000.0, 5590000000.0, 5600000000.0,
      5610000000.0, 5620000000.0, 5630000000.0, 5640000000.0, 5660000000.0, 5670000000.0,
      5680000000.0, 5690000000.0, 5700000000.0, 5710000000.0, 5720000000.0, 5745000000.0,
      5755000000.0, 5765000000.0, 5775000000.0, 5785000000.0, 5795000000.0, 5805000000.0,
      5825000000.0, 5860000000.0, 5870000000.0, 5880000000.0, 5890000000.0, 5900000000.0,
      5910000000.0, 5920000000.0]'
    orient: Qt.QVBoxLayout
    type: real
    value: '2472000000'
    widget: combo_box
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 12.0]
    rotation: 0
    state: enabled
- name: gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.01'
    stop: '1'
    value: '0.75'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 12.0]
    rotation: 0
    state: enabled
- name: lo_offset
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '[]'
    num_opts: '3'
    option0: '0'
    option1: 6e6
    option2: 11e6
    option3: '3'
    option4: '4'
    options: '[0, 1, 2]'
    orient: Qt.QVBoxLayout
    type: real
    value: '0'
    widget: combo_box
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable_qtgui_chooser
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    label0: ''
    label1: ''
    label2: ''
    label3: ''
    label4: ''
    labels: '["1 MHz", "5 MHz", "10 MHz", "20 MHz"]'
    num_opts: '0'
    option0: '0'
    option1: '1'
    option2: '2'
    option3: '3'
    option4: '4'
    options: '[1e6, 5e6, 10e6, 20e6]'
    orient: Qt.QVBoxLayout
    type: real
    value: 1e6
    widget: combo_box
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 12.0]
    rotation: 0
    state: enabled
- name: sync_length
  id: variable
  parameters:
    comment: ''
    value: '320'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 184.0]
    rotation: 0
    state: enabled
- name: window_size
  id: variable
  parameters:
    comment: ''
    value: '48'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 120.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_0
  id: blocks_complex_to_mag
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1248, 312.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 216.0]
    rotation: 0
    state: enabled
- name: blocks_conjugate_cc_0
  id: blocks_conjugate_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 408.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: sync_length
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 728.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '16'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 408.0]
    rotation: 0
    state: enabled
- name: blocks_divide_xx_0
  id: blocks_divide_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1432, 184.0]
    rotation: 0
    state: enabled
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 1112.0]
    rotation: 0
    state: true
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: window_size  + 16
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 180.0]
    rotation: 0
    state: enabled
- name: blocks_moving_average_xx_1
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: window_size
    max_iter: '4000'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 276.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 296.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '64'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 696.0]
    rotation: 0
    state: enabled
- name: blocks_vector_to_stream_0_0
  id: blocks_vector_to_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '52'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 848.0]
    rotation: 0
    state: enabled
- name: digital_probe_mpsk_snr_est_c_0
  id: digital_probe_mpsk_snr_est_c
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.05'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg_nsamples: '1000'
    type: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 1112.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    AP_pos: '[0.24, 0.24, 0.5]'
    IRS_pos: '[0.015, 0.015, 0]'
    IRS_scale: '16'
    IRS_unit_interval: '0.03'
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\nimport sys\nsys.path.append('/home/oedon/grEnv/lib/python3.11/site-packages/')\n\
      sys.path.append('/home/oedon/\u684C\u9762/IRS-gnu/')\nimport numpy as np\nimport\
      \ time\nfrom stable_baselines3 import DQN\nfrom numpy import pi\nfrom typing\
      \ import List\nfrom gnuradio import gr\nimport socket\nimport matplotlib.pyplot\
      \ as plt\n\ndef custom_lr_schedule(current_step: int) -> float:\n    pass\n\n\
      def custom_exploration_schedule(current_step: int) -> float:\n    pass\n\ndef\
      \ genPhase_nograd(interval, IRS_scale, IRS_pos, AP_pos, theta, phi, cluster_scale=1,\
      \ freq=5e9):\n    group_scale = IRS_scale // cluster_scale\n\n    Y = np.reshape(np.array([list(range(group_scale))\
      \ * group_scale]),\n                        [group_scale, group_scale])\n  \
      \  X = np.transpose(Y)\n\n    pos = [  # [x0,y0,z0] is the matrix of each IRS\
      \ unit's position\n        (np.ones((group_scale, group_scale)) * IRS_pos[0]\
      \ + X * interval),  # x0\n        (np.ones((group_scale, group_scale)) * IRS_pos[1]\
      \ + Y * interval),  # y0\n        (np.ones((group_scale, group_scale)) * IRS_pos[2])]\n\
      \    # radians rather than degree!\n    k = 2 * pi * freq / 3e8\n    atpos =\
      \ [  # [x1,y1,z1] is the matrix of AP's position\n        (np.ones((IRS_scale,\
      \ IRS_scale)) * AP_pos[0]),  # x1\n        (np.ones((IRS_scale, IRS_scale))\
      \ * AP_pos[1]),  # y1\n        (np.ones((IRS_scale, IRS_scale)) * AP_pos[2])]\
      \  # z1\n\n    D = np.power(np.power((pos[0] - atpos[0]), 2) + \\\n        \
      \         np.power((pos[1] - atpos[1]), 2) + \\\n                 np.power((pos[2]\
      \ - atpos[2]), 2), 0.5)\n    if not theta == 0:\n        D1 = np.sin(theta)\
      \ * np.cos(phi) * pos[1]\n        D2 = np.sin(theta) * np.sin(phi) * pos[0]\n\
      \        pha = k * (D - D1 - D2)\n    else:\n        D1 = np.sin(phi) * np.cos(theta)\
      \ * pos[0]\n        D2 = np.sin(phi) * 0 * pos[1]\n        pha = k * (D - D1\
      \ - D2)\n\n    return np.exp(1j * pha)\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\n\
      \                 vectorSize:int=1,\n                 IRS_unit_interval:float=0.03,\n\
      \                 IRS_scale:int=16,\n                 IRS_pos:List=[0.015, 0.015,\
      \ 0],\n                 AP_pos:List=[0.24, 0.24, 0.5],\n                 visualize:bool=False):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='IRS control block',   # will show up in GRC\n \
      \           in_sig=[(np.complex64, vectorSize)],\n            out_sig=None\n\
      \        )\n        # bluetooth server\n        self.s = socket.socket(socket.AF_INET,\
      \ socket.SOCK_STREAM)\n        self.s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,\
      \ 1)  # reboot socket\n        self.host = '192.168.10.5'\n        self.port\
      \ = 56666\n        self.s.bind((self.host, self.port))  # bind\n        self.s.setblocking(False)\n\
      \        self.s.listen(5)\n        # static params\n        self.IRS_unit_interval\
      \ = IRS_unit_interval\n        self.IRS_scale = IRS_scale\n        self.N =\
      \ IRS_scale**2\n        # self.model = DQN.load('/home/oedon/\u684C\u9762/IRS-gnu/ppo_sub-channel_SB3')\n\
      \        self.model = DQN.load('/home/oedon/\u684C\u9762/IRS-gnu/ppo_sub-channel_SB3.zip',\
      \ custom_objects={\"lr_schedule\": custom_lr_schedule, \"exploration_schedule\"\
      : custom_exploration_schedule})\n        \n        # initialize\n        self.Psi\
      \ = genPhase_nograd(self.IRS_unit_interval, self.IRS_scale, IRS_pos, AP_pos,\
      \ 0, 0)\n        \n        # action set\n        self.ShiftArray1 = [np.exp(1j\
      \ * pi * 1 * np.arange(0, self.N, 1) / self.N),\n                          \
      \  np.exp(-1j * pi * 1 * np.arange(0, self.N, 1) / self.N),\n              \
      \              np.exp(1j * pi * 2 * np.arange(0, self.N, 1) / self.N),\n   \
      \                         np.exp(-1j * pi * 2 * np.arange(0, self.N, 1) / self.N),\n\
      \                            np.exp(4j * pi * 2 * np.arange(0, self.N, 1) /\
      \ self.N),\n                            np.exp(-4j * pi * 2 * np.arange(0, self.N,\
      \ 1) / self.N),\n                            np.exp(0j * pi * 2 * np.arange(0,\
      \ self.N, 1) / self.N)]\n        tmp = [np.transpose(np.reshape(a, (self.IRS_scale,\
      \ self.IRS_scale))).flatten() for a in self.ShiftArray1[:-1]]\n        self.ShiftArray1.extend(tmp)\n\
      \n        # visualize\n        self.visualize = visualize\n        if visualize:\n\
      \            plt.figure()\n            plt.ion()\n\n    def work(self, input_items,\
      \ output_items):\n        # print(self.host)\n        H = np.sum(np.array(input_items))\n\
      \        H = np.ones(258) * H\n        CSI = np.hstack([H.real.flatten(), H.imag.flatten()])\n\
      \        IRS = np.vstack([self.Psi.real.flatten().astype(int), self.Psi.imag.flatten().astype(int)])\n\
      \        obs = {\"CSI\": CSI, \"IRS\": IRS}\n        a = self.step(obs)\n  \
      \      if self.visualize:\n            p_real = np.where(np.angle(self.Psi)\
      \ > 0, 1, 0)\n            plt.clf()\n            plt.imshow(p_real, cmap='jet',\
      \ interpolation='nearest')\n            plt.title('Current IRS pattern')\n \
      \       return len(a)\n\n    def step(self, obs):\n        # print('predicting...')\n\
      \        action, _ = self.model.predict(obs, deterministic=True)\n        action\
      \ = action.item()\n        try:\n            conn, addr = self.s.accept()\n\
      \            conn.send(action.to_bytes(4,byteorder='little'))\n            print('send!')\n\
      \            self.Psi *= np.reshape(self.ShiftArray1[action], (self.IRS_scale,\
      \ self.IRS_scale))  # only send seccessfully\n            time.sleep(0.1)\n\
      \            conn.close()\n        except BlockingIOError:\n            pass\n\
      \        return [action]\n\n        \n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vectorSize: '1'
    visualize: 'False'
  states:
    _io_cache: ('IRS control block', 'blk', [('vectorSize', '1'), ('IRS_unit_interval',
      '0.03'), ('IRS_scale', '16'), ('IRS_pos', '[0.015, 0.015, 0]'), ('AP_pos', '[0.24,
      0.24, 0.5]'), ('visualize', 'False')], [('0', 'complex', 1)], [], 'Embedded
      Python Block example - a simple multiply const', ['IRS_scale', 'IRS_unit_interval',
      'visualize'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 884.0]
    rotation: 180
    state: enabled
- name: epy_block_2
  id: epy_block
  parameters:
    _source_code: "import pmt\nimport numpy as np\nimport pickle\nfrom gnuradio import\
      \ gr\nfrom PIL import Image\n\nclass blk(gr.basic_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    def __init__(self,\n     \
      \            image_hight:int=15,\n                 image_width:int=15):  # only\
      \ default arguments here\n        gr.basic_block.__init__(\n            self,\n\
      \            name='Extract Pics',   # will be shown in GRC\n            in_sig=None,\n\
      \            out_sig=None\n        )\n        self.message_port_register_in(pmt.intern('MAC'))\n\
      \        self.set_msg_handler(pmt.intern('MAC'), self.handle_msg)\n        self.H\
      \ = image_hight\n        self.W = image_width\n\n    def handle_msg(self, msg):\n\
      \        # This is where you handle the message. You can access the data using\
      \ pmt.to_python(msg).\n        data = pmt.to_python(msg)[-1]\n        target\
      \ = data[24:]  # loaded data\n        pics = target[4:]\n        \n        img\
      \ = bytes(pics)\n        img = pickle.loads(img)\n        img.save('/home/oedon/\u684C\
      \u9762/RX.jpg')\n        \n        print(len(pics))\n\n    def work(self, input_items,\
      \ output_items):\n        # This is where you handle the stream data.\n    \
      \    # print(input_items[0])\n        return True\n"
    affinity: ''
    alias: ''
    comment: ''
    image_hight: '15'
    image_width: '15'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Extract Pics', 'blk', [('image_hight', '15'), ('image_width', '15')],
      [('MAC', 'message', 1)], [], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 896.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: '64'
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.rectangular(64)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 652.0]
    rotation: 0
    state: enabled
- name: ieee802_11_decode_mac_0
  id: ieee802_11_decode_mac
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 832.0]
    rotation: 0
    state: enabled
- name: ieee802_11_extract_csi_0
  id: ieee802_11_extract_csi
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 848.0]
    rotation: 0
    state: enabled
- name: ieee802_11_frame_equalizer_0
  id: ieee802_11_frame_equalizer
  parameters:
    affinity: ''
    algo: ieee802_11.Equalizer(chan_est)
    alias: ''
    bw: samp_rate
    comment: ''
    debug: 'False'
    freq: freq
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 868.0]
    rotation: 0
    state: enabled
- name: ieee802_11_parse_mac_0
  id: ieee802_11_parse_mac
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 832.0]
    rotation: 0
    state: enabled
- name: ieee802_11_sync_long_0
  id: ieee802_11_sync_long
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    sync_length: sync_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 692.0]
    rotation: 0
    state: enabled
- name: ieee802_11_sync_short_0_0
  id: ieee802_11_sync_short
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    debug: 'False'
    log: 'False'
    maxoutbuf: '0'
    min_plateau: '2'
    minoutbuf: '0'
    threshold: '0.56'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 668.0]
    rotation: 0
    state: enabled
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 1040.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '"Rx signal"'
    nconnections: '1'
    size: 48*10
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 1020.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '"CSI"'
    nconnections: '1'
    size: 48*10
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 820.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1344, 92.0]
    rotation: 180
    state: enabled
- name: soapy_hackrf_source_0
  id: soapy_hackrf_source
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: '0'
    center_freq: freq
    comment: ''
    dev_args: '''hackrf=0'''
    gain: '16'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
    vga: '16'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 348.0]
    rotation: 0
    state: disabled
- name: uhd_usrp_source_0
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: uhd.tune_request(freq, rf_freq = freq - lo_offset, rf_freq_policy=uhd.tune_request.POLICY_MANUAL)
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: '0.0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs0: 0+0j
    dc_offs1: 0+0j
    dc_offs10: 0+0j
    dc_offs11: 0+0j
    dc_offs12: 0+0j
    dc_offs13: 0+0j
    dc_offs14: 0+0j
    dc_offs15: 0+0j
    dc_offs16: 0+0j
    dc_offs17: 0+0j
    dc_offs18: 0+0j
    dc_offs19: 0+0j
    dc_offs2: 0+0j
    dc_offs20: 0+0j
    dc_offs21: 0+0j
    dc_offs22: 0+0j
    dc_offs23: 0+0j
    dc_offs24: 0+0j
    dc_offs25: 0+0j
    dc_offs26: 0+0j
    dc_offs27: 0+0j
    dc_offs28: 0+0j
    dc_offs29: 0+0j
    dc_offs3: 0+0j
    dc_offs30: 0+0j
    dc_offs31: 0+0j
    dc_offs4: 0+0j
    dc_offs5: 0+0j
    dc_offs6: 0+0j
    dc_offs7: 0+0j
    dc_offs8: 0+0j
    dc_offs9: 0+0j
    dc_offs_enb0: default
    dc_offs_enb1: default
    dc_offs_enb10: default
    dc_offs_enb11: default
    dc_offs_enb12: default
    dc_offs_enb13: default
    dc_offs_enb14: default
    dc_offs_enb15: default
    dc_offs_enb16: default
    dc_offs_enb17: default
    dc_offs_enb18: default
    dc_offs_enb19: default
    dc_offs_enb2: default
    dc_offs_enb20: default
    dc_offs_enb21: default
    dc_offs_enb22: default
    dc_offs_enb23: default
    dc_offs_enb24: default
    dc_offs_enb25: default
    dc_offs_enb26: default
    dc_offs_enb27: default
    dc_offs_enb28: default
    dc_offs_enb29: default
    dc_offs_enb3: default
    dc_offs_enb30: default
    dc_offs_enb31: default
    dc_offs_enb4: default
    dc_offs_enb5: default
    dc_offs_enb6: default
    dc_offs_enb7: default
    dc_offs_enb8: default
    dc_offs_enb9: default
    dev_addr: ''
    dev_args: '""'
    gain0: gain
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: normalized
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    iq_imbal0: 0+0j
    iq_imbal1: 0+0j
    iq_imbal10: 0+0j
    iq_imbal11: 0+0j
    iq_imbal12: 0+0j
    iq_imbal13: 0+0j
    iq_imbal14: 0+0j
    iq_imbal15: 0+0j
    iq_imbal16: 0+0j
    iq_imbal17: 0+0j
    iq_imbal18: 0+0j
    iq_imbal19: 0+0j
    iq_imbal2: 0+0j
    iq_imbal20: 0+0j
    iq_imbal21: 0+0j
    iq_imbal22: 0+0j
    iq_imbal23: 0+0j
    iq_imbal24: 0+0j
    iq_imbal25: 0+0j
    iq_imbal26: 0+0j
    iq_imbal27: 0+0j
    iq_imbal28: 0+0j
    iq_imbal29: 0+0j
    iq_imbal3: 0+0j
    iq_imbal30: 0+0j
    iq_imbal31: 0+0j
    iq_imbal4: 0+0j
    iq_imbal5: 0+0j
    iq_imbal6: 0+0j
    iq_imbal7: 0+0j
    iq_imbal8: 0+0j
    iq_imbal9: 0+0j
    iq_imbal_enb0: default
    iq_imbal_enb1: default
    iq_imbal_enb10: default
    iq_imbal_enb11: default
    iq_imbal_enb12: default
    iq_imbal_enb13: default
    iq_imbal_enb14: default
    iq_imbal_enb15: default
    iq_imbal_enb16: default
    iq_imbal_enb17: default
    iq_imbal_enb18: default
    iq_imbal_enb19: default
    iq_imbal_enb2: default
    iq_imbal_enb20: default
    iq_imbal_enb21: default
    iq_imbal_enb22: default
    iq_imbal_enb23: default
    iq_imbal_enb24: default
    iq_imbal_enb25: default
    iq_imbal_enb26: default
    iq_imbal_enb27: default
    iq_imbal_enb28: default
    iq_imbal_enb29: default
    iq_imbal_enb3: default
    iq_imbal_enb30: default
    iq_imbal_enb31: default
    iq_imbal_enb4: default
    iq_imbal_enb5: default
    iq_imbal_enb6: default
    iq_imbal_enb7: default
    iq_imbal_enb8: default
    iq_imbal_enb9: default
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: ''
    rx_agc0: Default
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 212.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: WiFi Sync Short cor
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 248.0]
    rotation: 180
    state: true
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: WiFi Sync Short in
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 472.0]
    rotation: 180
    state: true
- name: virtual_sink_0_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: WiFi Sync Short abs
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 376.0]
    rotation: 180
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: demoded
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 776.0]
    rotation: 180
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: WiFi Sync Short in
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 624.0]
    rotation: 180
    state: true
- name: virtual_source_0_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: WiFi Sync Short abs
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 576.0]
    rotation: 180
    state: true
- name: virtual_source_0_2
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: WiFi Sync Short cor
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 528.0]
    rotation: 180
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: demoded
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 816.0]
    rotation: 180
    state: true

connections:
- [blocks_complex_to_mag_0, '0', blocks_divide_xx_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_moving_average_xx_0, '0']
- [blocks_conjugate_cc_0, '0', blocks_multiply_xx_0, '1']
- [blocks_delay_0, '0', ieee802_11_sync_long_0, '1']
- [blocks_delay_0_0, '0', blocks_conjugate_cc_0, '0']
- [blocks_delay_0_0, '0', virtual_sink_0_0, '0']
- [blocks_divide_xx_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_divide_xx_0, '0', virtual_sink_0, '0']
- [blocks_moving_average_xx_0, '0', blocks_divide_xx_0, '1']
- [blocks_moving_average_xx_1, '0', blocks_complex_to_mag_0, '0']
- [blocks_moving_average_xx_1, '0', virtual_sink_0_1, '0']
- [blocks_multiply_xx_0, '0', blocks_moving_average_xx_1, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_0, '0']
- [blocks_vector_to_stream_0_0, '0', epy_block_0, '0']
- [blocks_vector_to_stream_0_0, '0', qtgui_const_sink_x_0_0, '0']
- [digital_probe_mpsk_snr_est_c_0, snr, blocks_message_debug_0, print]
- [fft_vxx_0, '0', virtual_sink_1, '0']
- [ieee802_11_decode_mac_0, out, epy_block_2, MAC]
- [ieee802_11_decode_mac_0, out, ieee802_11_parse_mac_0, in]
- [ieee802_11_extract_csi_0, '0', blocks_vector_to_stream_0_0, '0']
- [ieee802_11_frame_equalizer_0, '0', ieee802_11_decode_mac_0, '0']
- [ieee802_11_frame_equalizer_0, symbols, pdu_pdu_to_tagged_stream_0, pdus]
- [ieee802_11_parse_mac_0, out, ieee802_11_extract_csi_0, pdu in]
- [ieee802_11_sync_long_0, '0', blocks_stream_to_vector_0, '0']
- [ieee802_11_sync_short_0_0, '0', blocks_delay_0, '0']
- [ieee802_11_sync_short_0_0, '0', ieee802_11_sync_long_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', digital_probe_mpsk_snr_est_c_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', qtgui_const_sink_x_0, '0']
- [soapy_hackrf_source_0, '0', blocks_complex_to_mag_squared_0, '0']
- [soapy_hackrf_source_0, '0', blocks_delay_0_0, '0']
- [soapy_hackrf_source_0, '0', blocks_multiply_xx_0, '0']
- [uhd_usrp_source_0, '0', blocks_complex_to_mag_squared_0, '0']
- [uhd_usrp_source_0, '0', blocks_delay_0_0, '0']
- [uhd_usrp_source_0, '0', blocks_multiply_xx_0, '0']
- [virtual_source_0, '0', ieee802_11_sync_short_0_0, '0']
- [virtual_source_0_1, '0', ieee802_11_sync_short_0_0, '1']
- [virtual_source_0_2, '0', ieee802_11_sync_short_0_0, '2']
- [virtual_source_1, '0', ieee802_11_frame_equalizer_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.5.1
